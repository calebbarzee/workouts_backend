{
  "swagger": "2.0",
  "info": {
    "title": "Workouts API",
    "description": "Access and store your workouts.",
    "version": "1.0.0"
  },
  "host": "https://workoutaccess.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Workouts",
      "description": "CRUD operations regarding the Exercise Model."
    },
    {
      "name": "Users",
      "description": "CRUD operations regarding the User Model."
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "auth0": {
      "type": "oauth2",
      "authorizationUrl": "https://workoutaccess.onrender.com/login",
      "flow": "authorizationCode"
    }
  },
  "paths": {
    "/logout": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a new user.",
        "description": "",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Please only add your firstName and lastName when calling this endpoint.",
            "schema": {
              "$ref": "#/definitions/newUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created. You will receive the new user id.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "a random string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Failed to create a new user. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          {
            "auth0": [
              "openid"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get your user data when you are logged in and your user is created.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Able to retrieve your data. You will receive your user object.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to retrieve your user object. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          {
            "auth0": [
              "openid"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Modify your user object",
        "description": "",
        "parameters": [
          {
            "name": "Update Data",
            "in": "body",
            "description": "Please only modify your firstName and lastName when calling this endpoint.",
            "schema": {
              "$ref": "#/definitions/newUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Able to update your data. You will receive your new user object.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update your user object. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          {
            "auth0": [
              "openid"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "You can delete your user data in the database.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Able to delete your data. You will receive a 200 status code but no json data."
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to delete your user object. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          {
            "auth0": [
              "openid"
            ]
          }
        ]
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a specific user data using the userId.",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Able to retrieve user data. You will receive an user object.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to retrieve the user object. You will receive an error object.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        },
        "security": [
          {
            "auth0": [
              "openid"
            ]
          }
        ]
      }
    },
    "/workout/": {
      "get": {
        "tags": [
          "Workouts"
        ],
        "summary": "Gets all workouts.",
        "description": "",
        "operationId": "getAllWorkouts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Workouts"
        ],
        "summary": "Add workout to the store.",
        "description": "",
        "operationId": "addWorkout",
        "parameters": [
          {
            "name": "workout",
            "in": "body",
            "description": "Workout interface",
            "required": true,
            "schema": {
              "$ref": "#/definitions/workout"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/workout/{workoutId}": {
      "get": {
        "tags": [
          "Workouts"
        ],
        "summary": "Gets workout by ID.",
        "description": "",
        "operationId": "getWorkoutById",
        "parameters": [
          {
            "name": "workoutId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Workouts"
        ],
        "summary": "Update workout by ID.",
        "description": "",
        "operationId": "updateWorkout",
        "parameters": [
          {
            "name": "workoutId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Workouts"
        ],
        "summary": "Delete workout by ID.",
        "description": "",
        "operationId": "deleteWorkout",
        "parameters": [
          {
            "name": "workoutId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/workout/addWorkout/{workoutId}": {
      "put": {
        "tags": [
          "Workouts"
        ],
        "summary": "Add workout to user.",
        "description": "",
        "operationId": "addWorkoutToUser",
        "parameters": [
          {
            "name": "workoutId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/exercise/": {
      "get": {
        "tags": [
          "Exercises"
        ],
        "summary": "Gets all exercises.",
        "description": "",
        "operationId": "getAllExercises",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Exercises"
        ],
        "summary": "Add exercise to the store.",
        "description": "",
        "operationId": "addExercise",
        "parameters": [
          {
            "name": "exercise",
            "in": "body",
            "description": "Exercise interface",
            "required": true,
            "schema": {
              "$ref": "#/definitions/exercise"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/exercise/{exerciseId}": {
      "get": {
        "tags": [
          "Exercises"
        ],
        "summary": "Gets exercise by ID.",
        "description": "",
        "operationId": "getExerciseById",
        "parameters": [
          {
            "name": "exerciseId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Exercises"
        ],
        "summary": "Update exercise by ID.",
        "description": "",
        "operationId": "updateExercise",
        "parameters": [
          {
            "name": "exerciseId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "string"
        },
        "firstName": {
          "type": "string",
          "example": "string"
        },
        "lastName": {
          "type": "string",
          "example": "string"
        },
        "tokenData": {
          "type": "object",
          "properties": {}
        },
        "workouts": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    },
    "newUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "string"
        },
        "lastName": {
          "type": "string",
          "example": "string"
        }
      },
      "required": [
        "firstName",
        "lastName"
      ]
    },
    "error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "string"
        },
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "string"
            }
          }
        }
      },
      "required": [
        "message"
      ]
    },
    "workout": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Bench Press"
        },
        "description": {
          "type": "string",
          "example": "A chest exercise involving pressing of a barbell from a supine position."
        },
        "imageURL": {
          "type": "string",
          "example": "https://plus.unsplash.com/premium_photo-1672280783573-e0e0ca8fed20?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1043&q=80"
        },
        "categories": {
          "type": "string",
          "example": "Weight Lifting"
        },
        "muscleGroup": {
          "type": "string",
          "example": "Chest"
        }
      }
    }
  }
}